-- Generated by: xvhdl 2.49 31-Jul-2008
-- Date: 5-Dec-13 10:45:22
-- Path: /home/ajcjanssen/draw_pixel/test

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
LIBRARY CellsLib;
USE CellsLib.CellsLib_DECL_PACK.all;

-- user directives added from .sls2vhdl


ARCHITECTURE extracted OF Draw_pixel IS

  SIGNAL n12: STD_LOGIC;
  SIGNAL n34: STD_LOGIC;
  SIGNAL n32: STD_LOGIC;
  SIGNAL n36: STD_LOGIC;
  SIGNAL n20: STD_LOGIC;
  SIGNAL n14: STD_LOGIC;
  SIGNAL n30: STD_LOGIC;
  SIGNAL n38: STD_LOGIC;
  SIGNAL n22: STD_LOGIC;
  SIGNAL n40: STD_LOGIC;
  SIGNAL n28: STD_LOGIC;
  SIGNAL n18: STD_LOGIC;
  SIGNAL n4: STD_LOGIC;
  SIGNAL n47: STD_LOGIC;
  SIGNAL n6: STD_LOGIC;
  SIGNAL n16: STD_LOGIC;
  SIGNAL n45: STD_LOGIC;
  SIGNAL n8: STD_LOGIC;
  SIGNAL n49: STD_LOGIC;
  SIGNAL n24: STD_LOGIC;
  SIGNAL n50: STD_LOGIC;
  SIGNAL n26: STD_LOGIC;
  SIGNAL n10: STD_LOGIC;
  SIGNAL n48: STD_LOGIC;
  SIGNAL busy: STD_LOGIC;

  SIGNAL done_int: STD_LOGIC;
  SIGNAL ramaddr_int: STD_LOGIC_VECTOR(15 DOWNTO 0);
  SIGNAL ramdata_int: STD_LOGIC_VECTOR(3 DOWNTO 0);
  SIGNAL draw_write_int: STD_LOGIC;

BEGIN

  done <= done_int;
  ramaddr <= ramaddr_int;
  ramdata <= ramdata_int;
  draw_write <= draw_write_int;


  U46: iv110 PORT MAP (x(7), n18);
  U28: iv110 PORT MAP (n50, n45);
  U45: iv110 PORT MAP (x(6), n20);
  U44: iv110 PORT MAP (x(5), n22);
  U43: iv110 PORT MAP (x(4), n24);
  U42: iv110 PORT MAP (x(3), n26);
  U41: iv110 PORT MAP (x(2), n28);
  U40: iv110 PORT MAP (x(1), n30);
  U39: iv110 PORT MAP (x(0), n32);
  U38: iv110 PORT MAP (color(3), n34);
  U37: iv110 PORT MAP (color(2), n36);
  U36: iv110 PORT MAP (color(1), n38);
  U53: iv110 PORT MAP (y(6), n4);
  U35: iv110 PORT MAP (color(0), n40);
  U52: iv110 PORT MAP (y(5), n6);
  U51: iv110 PORT MAP (y(4), n8);
  U32: iv110 PORT MAP (reset, n48);
  U49: iv110 PORT MAP (y(2), n12);
  U50: iv110 PORT MAP (y(3), n10);
  U48: iv110 PORT MAP (y(1), n14);
  U29: iv110 PORT MAP (n45, draw_write_int);
  U47: iv110 PORT MAP (y(0), n16);
  ramaddr_tri_11_inst: tinv10 PORT MAP (n10, n50, ramaddr_int(11));
  ramdata_tri_3_inst: tinv10 PORT MAP (n34, draw_write_int, ramdata_int(3));
  ramaddr_tri_1_inst: tinv10 PORT MAP (n30, draw_write_int, ramaddr_int(1));
  ramaddr_tri_8_inst: tinv10 PORT MAP (n16, n50, ramaddr_int(8));
  ramdata_tri_1_inst: tinv10 PORT MAP (n38, draw_write_int, ramdata_int(1));
  ramaddr_tri_6_inst: tinv10 PORT MAP (n20, draw_write_int, ramaddr_int(6));
  ramaddr_tri_14_inst: tinv10 PORT MAP (n4, n50, ramaddr_int(14));
  ramaddr_tri_4_inst: tinv10 PORT MAP (n24, draw_write_int, ramaddr_int(4));
  ramaddr_tri_12_inst: tinv10 PORT MAP (n8, n50, ramaddr_int(12));
  ramaddr_tri_2_inst: tinv10 PORT MAP (n28, draw_write_int, ramaddr_int(2));
  ramaddr_tri_10_inst: tinv10 PORT MAP (n12, n50, ramaddr_int(10));
  ramaddr_tri_9_inst: tinv10 PORT MAP (n14, n50, ramaddr_int(9));
  ramdata_tri_2_inst: tinv10 PORT MAP (n36, draw_write_int, ramdata_int(2));
  ramaddr_tri_0_inst: tinv10 PORT MAP (n32, draw_write_int, ramaddr_int(0));
  ramaddr_tri_7_inst: tinv10 PORT MAP (n18, n50, ramaddr_int(7));
  ramdata_tri_0_inst: tinv10 PORT MAP (n40, draw_write_int, ramdata_int(0));
  ramaddr_tri_15_inst: tinv10 PORT MAP (asb, n50, ramaddr_int(15));
  ramaddr_tri_5_inst: tinv10 PORT MAP (n22, draw_write_int, ramaddr_int(5));
  ramaddr_tri_13_inst: tinv10 PORT MAP (n6, n50, ramaddr_int(13));
  ramaddr_tri_3_inst: tinv10 PORT MAP (n26, draw_write_int, ramaddr_int(3));
  busy_reg: dfn10 PORT MAP (draw_write_int, clk, busy);
  U34: no210 PORT MAP (busy, n49, n50);
  U31: no210 PORT MAP (reset, n47, done_int);
  U33: na310 PORT MAP (draw_can_access, enable, n48, n49);
  U30: na310 PORT MAP (enable, busy, draw_can_access, n47);

END extracted;



