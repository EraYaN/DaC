|top_de1
vga_hsync <= gpu:inst2.vgahsync
clock_50mhz => gen6mhz:inst1.clk50mhz
reset => gpu:inst2.reset
SPICLK => gpu:inst2.spi_clk
SPIMOSI => gpu:inst2.spi_mosi
RAMDATA[0] <> gpu:inst2.ramdata[0]
RAMDATA[1] <> gpu:inst2.ramdata[1]
RAMDATA[2] <> gpu:inst2.ramdata[2]
RAMDATA[3] <> gpu:inst2.ramdata[3]
vga_vsync <= gpu:inst2.vgavsync
RAMWE <= gpu:inst2.ramwe_n
RAMADDR[0] <= gpu:inst2.ramaddr[0]
RAMADDR[1] <= gpu:inst2.ramaddr[1]
RAMADDR[2] <= gpu:inst2.ramaddr[2]
RAMADDR[3] <= gpu:inst2.ramaddr[3]
RAMADDR[4] <= gpu:inst2.ramaddr[4]
RAMADDR[5] <= gpu:inst2.ramaddr[5]
RAMADDR[6] <= gpu:inst2.ramaddr[6]
RAMADDR[7] <= gpu:inst2.ramaddr[7]
RAMADDR[8] <= gpu:inst2.ramaddr[8]
RAMADDR[9] <= gpu:inst2.ramaddr[9]
RAMADDR[10] <= gpu:inst2.ramaddr[10]
RAMADDR[11] <= gpu:inst2.ramaddr[11]
RAMADDR[12] <= gpu:inst2.ramaddr[12]
RAMADDR[13] <= gpu:inst2.ramaddr[13]
RAMADDR[14] <= gpu:inst2.ramaddr[14]
RAMADDR[15] <= gpu:inst2.ramaddr[15]
vga_b[0] <= pre_vga_dac_4:inst.vga_b[0]
vga_b[1] <= pre_vga_dac_4:inst.vga_b[1]
vga_b[2] <= pre_vga_dac_4:inst.vga_b[2]
vga_b[3] <= pre_vga_dac_4:inst.vga_b[3]
vga_g[0] <= pre_vga_dac_4:inst.vga_g[0]
vga_g[1] <= pre_vga_dac_4:inst.vga_g[1]
vga_g[2] <= pre_vga_dac_4:inst.vga_g[2]
vga_g[3] <= pre_vga_dac_4:inst.vga_g[3]
vga_r[0] <= pre_vga_dac_4:inst.vga_r[0]
vga_r[1] <= pre_vga_dac_4:inst.vga_r[1]
vga_r[2] <= pre_vga_dac_4:inst.vga_r[2]
vga_r[3] <= pre_vga_dac_4:inst.vga_r[3]


|top_de1|gpu:inst2
clk => draw:draw1.clk
clk => decoder:decoder1.clk
clk => ramcontroller:ramcontroller1.clk
clk => vgacontroller:vgacontroller1.clk
clk => spi:spi1.clk
reset => draw:draw1.reset
reset => decoder:decoder1.reset
reset => spi:spi1.reset
reset => spi:spi1.spi_ss
reset => vgacontroller:vgacontroller1.reset_n
spi_clk => spi:spi1.spi_clk
spi_mosi => spi:spi1.spi_mosi
int_ready <= decoder:decoder1.int_ready
ramdata[0] <> ramdata[0]
ramdata[1] <> ramdata[1]
ramdata[2] <> ramdata[2]
ramdata[3] <> ramdata[3]
ramaddr[0] <> ramaddr[0]
ramaddr[0] <> ramaddr[0]
ramaddr[1] <> ramaddr[1]
ramaddr[1] <> ramaddr[1]
ramaddr[2] <> ramaddr[2]
ramaddr[2] <> ramaddr[2]
ramaddr[3] <> ramaddr[3]
ramaddr[3] <> ramaddr[3]
ramaddr[4] <> ramaddr[4]
ramaddr[4] <> ramaddr[4]
ramaddr[5] <> ramaddr[5]
ramaddr[5] <> ramaddr[5]
ramaddr[6] <> ramaddr[6]
ramaddr[6] <> ramaddr[6]
ramaddr[7] <> ramaddr[7]
ramaddr[7] <> ramaddr[7]
ramaddr[8] <> ramaddr[8]
ramaddr[8] <> ramaddr[8]
ramaddr[9] <> ramaddr[9]
ramaddr[9] <> ramaddr[9]
ramaddr[10] <> ramaddr[10]
ramaddr[10] <> ramaddr[10]
ramaddr[11] <> ramaddr[11]
ramaddr[11] <> ramaddr[11]
ramaddr[12] <> ramaddr[12]
ramaddr[12] <> ramaddr[12]
ramaddr[13] <> ramaddr[13]
ramaddr[13] <> ramaddr[13]
ramaddr[14] <> ramaddr[14]
ramaddr[14] <> ramaddr[14]
ramaddr[15] <> ramaddr[15]
ramaddr[15] <> ramaddr[15]
ramwe_n <= ramcontroller:ramcontroller1.write_enable
vgahsync <= vgacontroller:vgacontroller1.vgahsync
vgavsync <= vgacontroller:vgacontroller1.vgavsync
vgacolor[0] <= vgacontroller:vgacontroller1.vgacolor[0]
vgacolor[1] <= vgacontroller:vgacontroller1.vgacolor[1]
vgacolor[2] <= vgacontroller:vgacontroller1.vgacolor[2]
vgacolor[3] <= vgacontroller:vgacontroller1.vgacolor[3]


|top_de1|gpu:inst2|draw:draw1
clk => draw_fill:fill1.clk
reset => draw_fill:fill1.reset
x[0] => ~NO_FANOUT~
x[1] => ~NO_FANOUT~
x[2] => ~NO_FANOUT~
x[3] => ~NO_FANOUT~
x[4] => ~NO_FANOUT~
x[5] => ~NO_FANOUT~
x[6] => ~NO_FANOUT~
x[7] => ~NO_FANOUT~
w[0] => ~NO_FANOUT~
w[1] => ~NO_FANOUT~
w[2] => ~NO_FANOUT~
w[3] => ~NO_FANOUT~
w[4] => ~NO_FANOUT~
w[5] => ~NO_FANOUT~
w[6] => ~NO_FANOUT~
w[7] => ~NO_FANOUT~
y[0] => ~NO_FANOUT~
y[1] => ~NO_FANOUT~
y[2] => ~NO_FANOUT~
y[3] => ~NO_FANOUT~
y[4] => ~NO_FANOUT~
y[5] => ~NO_FANOUT~
y[6] => ~NO_FANOUT~
h[0] => ~NO_FANOUT~
h[1] => ~NO_FANOUT~
h[2] => ~NO_FANOUT~
h[3] => ~NO_FANOUT~
h[4] => ~NO_FANOUT~
h[5] => ~NO_FANOUT~
h[6] => ~NO_FANOUT~
color[0] => draw_fill:fill1.color[0]
color[1] => draw_fill:fill1.color[1]
color[2] => draw_fill:fill1.color[2]
color[3] => draw_fill:fill1.color[3]
en[0] => draw_fill:fill1.enable
en[1] => ~NO_FANOUT~
en[2] => ~NO_FANOUT~
en[3] => ~NO_FANOUT~
en[4] => ~NO_FANOUT~
en[5] => ~NO_FANOUT~
draw_ready <= draw_fill:fill1.done
asb => draw_fill:fill1.asb
draw_write <= draw_fill:fill1.draw_write
draw_read <= <GND>
draw_can_access => draw_fill:fill1.draw_can_access
ramaddr[0] <= draw_fill:fill1.ramaddr[0]
ramaddr[1] <= draw_fill:fill1.ramaddr[1]
ramaddr[2] <= draw_fill:fill1.ramaddr[2]
ramaddr[3] <= draw_fill:fill1.ramaddr[3]
ramaddr[4] <= draw_fill:fill1.ramaddr[4]
ramaddr[5] <= draw_fill:fill1.ramaddr[5]
ramaddr[6] <= draw_fill:fill1.ramaddr[6]
ramaddr[7] <= draw_fill:fill1.ramaddr[7]
ramaddr[8] <= draw_fill:fill1.ramaddr[8]
ramaddr[9] <= draw_fill:fill1.ramaddr[9]
ramaddr[10] <= draw_fill:fill1.ramaddr[10]
ramaddr[11] <= draw_fill:fill1.ramaddr[11]
ramaddr[12] <= draw_fill:fill1.ramaddr[12]
ramaddr[13] <= draw_fill:fill1.ramaddr[13]
ramaddr[14] <= draw_fill:fill1.ramaddr[14]
ramaddr[15] <= draw_fill:fill1.ramaddr[15]
ramdata[0] <= draw_fill:fill1.ramdata[0]
ramdata[1] <= draw_fill:fill1.ramdata[1]
ramdata[2] <= draw_fill:fill1.ramdata[2]
ramdata[3] <= draw_fill:fill1.ramdata[3]


|top_de1|gpu:inst2|draw:draw1|draw_fill:fill1
clk => almost_done.CLK
clk => draw_write~reg0.CLK
clk => y[0].CLK
clk => y[1].CLK
clk => y[2].CLK
clk => y[3].CLK
clk => y[4].CLK
clk => y[5].CLK
clk => y[6].CLK
clk => x[0].CLK
clk => x[1].CLK
clk => x[2].CLK
clk => x[3].CLK
clk => x[4].CLK
clk => x[5].CLK
clk => x[6].CLK
clk => x[7].CLK
reset => draw_fill_combi.IN0
enable => draw_fill_combi.IN1
color[0] => ramdata[0].DATAIN
color[1] => ramdata[1].DATAIN
color[2] => ramdata[2].DATAIN
color[3] => ramdata[3].DATAIN
asb => ramaddr[15].DATAIN
done <= done.DB_MAX_OUTPUT_PORT_TYPE
ramaddr[0] <= ramaddr[0].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[1] <= ramaddr[1].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[2] <= ramaddr[2].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[3] <= ramaddr[3].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[4] <= ramaddr[4].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[5] <= ramaddr[5].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[6] <= ramaddr[6].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[7] <= ramaddr[7].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[8] <= ramaddr[8].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[9] <= ramaddr[9].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[10] <= ramaddr[10].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[11] <= ramaddr[11].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[12] <= ramaddr[12].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[13] <= ramaddr[13].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[14] <= ramaddr[14].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[15] <= ramaddr[15].DB_MAX_OUTPUT_PORT_TYPE
ramdata[0] <= ramdata[0].DB_MAX_OUTPUT_PORT_TYPE
ramdata[1] <= ramdata[1].DB_MAX_OUTPUT_PORT_TYPE
ramdata[2] <= ramdata[2].DB_MAX_OUTPUT_PORT_TYPE
ramdata[3] <= ramdata[3].DB_MAX_OUTPUT_PORT_TYPE
draw_write <= draw_write~reg0.DB_MAX_OUTPUT_PORT_TYPE
draw_can_access => done.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => x_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => y_tmp.OUTPUTSELECT
draw_can_access => oe.OUTPUTSELECT
draw_can_access => almost_done_tmp.OUTPUTSELECT


|top_de1|gpu:inst2|decoder:decoder1
clk => is_init~reg0.CLK
clk => decoder_write~reg0.CLK
clk => decoder_claim~reg0.CLK
clk => asb~reg0.CLK
clk => en[0]~reg0.CLK
clk => en[1]~reg0.CLK
clk => en[2]~reg0.CLK
clk => en[3]~reg0.CLK
clk => en[4]~reg0.CLK
clk => en[5]~reg0.CLK
clk => h[0]~reg0.CLK
clk => h[1]~reg0.CLK
clk => h[2]~reg0.CLK
clk => h[3]~reg0.CLK
clk => h[4]~reg0.CLK
clk => h[5]~reg0.CLK
clk => h[6]~reg0.CLK
clk => w[0]~reg0.CLK
clk => w[1]~reg0.CLK
clk => w[2]~reg0.CLK
clk => w[3]~reg0.CLK
clk => w[4]~reg0.CLK
clk => w[5]~reg0.CLK
clk => w[6]~reg0.CLK
clk => w[7]~reg0.CLK
clk => y[0]~reg0.CLK
clk => y[1]~reg0.CLK
clk => y[2]~reg0.CLK
clk => y[3]~reg0.CLK
clk => y[4]~reg0.CLK
clk => y[5]~reg0.CLK
clk => y[6]~reg0.CLK
clk => x[0]~reg0.CLK
clk => x[1]~reg0.CLK
clk => x[2]~reg0.CLK
clk => x[3]~reg0.CLK
clk => x[4]~reg0.CLK
clk => x[5]~reg0.CLK
clk => x[6]~reg0.CLK
clk => x[7]~reg0.CLK
clk => color[0]~reg0.CLK
clk => color[1]~reg0.CLK
clk => color[2]~reg0.CLK
clk => color[3]~reg0.CLK
clk => instruction[0].CLK
clk => instruction[1].CLK
clk => instruction[2].CLK
clk => instruction[3].CLK
clk => packet_num[0].CLK
clk => packet_num[1].CLK
clk => packet_num[2].CLK
clk => int_ready~reg0.CLK
reset => packet_num.OUTPUTSELECT
reset => packet_num.OUTPUTSELECT
reset => packet_num.OUTPUTSELECT
reset => instruction.OUTPUTSELECT
reset => instruction.OUTPUTSELECT
reset => instruction.OUTPUTSELECT
reset => instruction.OUTPUTSELECT
reset => color.OUTPUTSELECT
reset => color.OUTPUTSELECT
reset => color.OUTPUTSELECT
reset => color.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => x.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => y.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => w.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => en.OUTPUTSELECT
reset => en.OUTPUTSELECT
reset => en.OUTPUTSELECT
reset => en.OUTPUTSELECT
reset => en.OUTPUTSELECT
reset => en.OUTPUTSELECT
reset => asb.OUTPUTSELECT
reset => is_init.OUTPUTSELECT
reset => int_ready.OUTPUTSELECT
reset => decoder_claim~reg0.ENA
reset => decoder_write~reg0.ENA
spi_data_rx[0] => color.DATAA
spi_data_rx[0] => Mux25.IN0
spi_data_rx[0] => Mux32.IN0
spi_data_rx[0] => Mux40.IN0
spi_data_rx[0] => Mux47.IN0
spi_data_rx[1] => color.DATAA
spi_data_rx[1] => Mux24.IN0
spi_data_rx[1] => Mux31.IN0
spi_data_rx[1] => Mux39.IN0
spi_data_rx[1] => Mux46.IN0
spi_data_rx[2] => color.DATAA
spi_data_rx[2] => Mux23.IN0
spi_data_rx[2] => Mux30.IN0
spi_data_rx[2] => Mux38.IN0
spi_data_rx[2] => Mux45.IN0
spi_data_rx[3] => color.DATAA
spi_data_rx[3] => Mux22.IN0
spi_data_rx[3] => Mux29.IN0
spi_data_rx[3] => Mux37.IN0
spi_data_rx[3] => Mux44.IN0
spi_data_rx[4] => LessThan0.IN8
spi_data_rx[4] => instr.DATAA
spi_data_rx[4] => Mux21.IN0
spi_data_rx[4] => Mux28.IN0
spi_data_rx[4] => Mux36.IN0
spi_data_rx[4] => Mux43.IN0
spi_data_rx[4] => Equal1.IN3
spi_data_rx[4] => Equal2.IN3
spi_data_rx[5] => LessThan0.IN7
spi_data_rx[5] => instr.DATAA
spi_data_rx[5] => Mux20.IN0
spi_data_rx[5] => Mux27.IN0
spi_data_rx[5] => Mux35.IN0
spi_data_rx[5] => Mux42.IN0
spi_data_rx[5] => Equal1.IN2
spi_data_rx[5] => Equal2.IN2
spi_data_rx[6] => LessThan0.IN6
spi_data_rx[6] => instr.DATAA
spi_data_rx[6] => Mux19.IN0
spi_data_rx[6] => Mux26.IN0
spi_data_rx[6] => Mux34.IN0
spi_data_rx[6] => Mux41.IN0
spi_data_rx[6] => Equal1.IN1
spi_data_rx[6] => Equal2.IN1
spi_data_rx[7] => LessThan0.IN5
spi_data_rx[7] => instr.DATAA
spi_data_rx[7] => Mux18.IN0
spi_data_rx[7] => Mux33.IN0
spi_data_rx[7] => Equal1.IN0
spi_data_rx[7] => Equal2.IN0
spi_data_available => en.OUTPUTSELECT
spi_data_available => en.OUTPUTSELECT
spi_data_available => en.OUTPUTSELECT
spi_data_available => en.OUTPUTSELECT
spi_data_available => en.OUTPUTSELECT
spi_data_available => en.OUTPUTSELECT
spi_data_available => int_ready.OUTPUTSELECT
spi_data_available => is_init.OUTPUTSELECT
spi_data_available => asb.OUTPUTSELECT
spi_data_available => color.OUTPUTSELECT
spi_data_available => color.OUTPUTSELECT
spi_data_available => color.OUTPUTSELECT
spi_data_available => color.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => x.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => y.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => w.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => h.OUTPUTSELECT
spi_data_available => packet_num.OUTPUTSELECT
spi_data_available => packet_num.OUTPUTSELECT
spi_data_available => packet_num.OUTPUTSELECT
spi_data_available => instruction.OUTPUTSELECT
spi_data_available => instruction.OUTPUTSELECT
spi_data_available => instruction.OUTPUTSELECT
spi_data_available => instruction.OUTPUTSELECT
draw_ready => en.OUTPUTSELECT
draw_ready => en.OUTPUTSELECT
draw_ready => en.OUTPUTSELECT
draw_ready => en.OUTPUTSELECT
draw_ready => en.OUTPUTSELECT
draw_ready => en.OUTPUTSELECT
draw_ready => int_ready.OUTPUTSELECT
draw_ready => is_init.OUTPUTSELECT
draw_ready => asb.OUTPUTSELECT
draw_ready => color.OUTPUTSELECT
draw_ready => color.OUTPUTSELECT
draw_ready => color.OUTPUTSELECT
draw_ready => color.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => x.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => y.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => w.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => h.OUTPUTSELECT
draw_ready => packet_num.OUTPUTSELECT
draw_ready => packet_num.OUTPUTSELECT
draw_ready => packet_num.OUTPUTSELECT
draw_ready => instruction.OUTPUTSELECT
draw_ready => instruction.OUTPUTSELECT
draw_ready => instruction.OUTPUTSELECT
draw_ready => instruction.OUTPUTSELECT
x[0] <= x[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= x[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[0] <= w[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[1] <= w[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[2] <= w[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[3] <= w[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[4] <= w[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[5] <= w[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[6] <= w[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
w[7] <= w[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[0] <= h[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[1] <= h[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[2] <= h[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[3] <= h[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[4] <= h[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[5] <= h[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
h[6] <= h[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[0] <= color[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[1] <= color[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[2] <= color[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[3] <= color[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en[0] <= en[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en[1] <= en[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en[2] <= en[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en[3] <= en[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en[4] <= en[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en[5] <= en[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
asb <= asb~reg0.DB_MAX_OUTPUT_PORT_TYPE
int_ready <= int_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoder_can_access => ~NO_FANOUT~
decoder_write <= decoder_write~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoder_claim <= decoder_claim~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_init <= is_init~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_de1|gpu:inst2|ramcontroller:ramcontroller1
clk => write_enable.IN1
write_enable <= write_enable.DB_MAX_OUTPUT_PORT_TYPE
vga_claim => draw_can_access.IN0
vga_claim => decoder_can_access.DATAB
decoder_claim => draw_can_access.IN1
is_init => draw_can_access.OUTPUTSELECT
is_init => decoder_can_access.OUTPUTSELECT
is_init => write_enable.OUTPUTSELECT
is_init => vga_can_access.DATAIN
decoder_write => write_enable.IN0
decoder_write => write_enable.DATAA
draw_write => write_enable.IN1
draw_read => write_enable.IN1
vga_read => write_enable.IN1
draw_can_access <= draw_can_access.DB_MAX_OUTPUT_PORT_TYPE
decoder_can_access <= decoder_can_access.DB_MAX_OUTPUT_PORT_TYPE
vga_can_access <= is_init.DB_MAX_OUTPUT_PORT_TYPE


|top_de1|gpu:inst2|vgacontroller:vgacontroller1
clk => v_count[0].CLK
clk => v_count[1].CLK
clk => v_count[2].CLK
clk => v_count[3].CLK
clk => v_count[4].CLK
clk => v_count[5].CLK
clk => v_count[6].CLK
clk => v_count[7].CLK
clk => v_count[8].CLK
clk => v_count[9].CLK
clk => h_count[0].CLK
clk => h_count[1].CLK
clk => h_count[2].CLK
clk => h_count[3].CLK
clk => h_count[4].CLK
clk => h_count[5].CLK
clk => h_count[6].CLK
clk => h_count[7].CLK
reset_n => ramaddr[15].IN1
reset_n => new_h_count[7].OUTPUTSELECT
reset_n => new_h_count[6].OUTPUTSELECT
reset_n => new_h_count[5].OUTPUTSELECT
reset_n => new_h_count[4].OUTPUTSELECT
reset_n => new_h_count[3].OUTPUTSELECT
reset_n => new_h_count[2].OUTPUTSELECT
reset_n => new_h_count[1].OUTPUTSELECT
reset_n => new_h_count[0].OUTPUTSELECT
reset_n => new_v_count[9].OUTPUTSELECT
reset_n => new_v_count[8].OUTPUTSELECT
reset_n => new_v_count[7].OUTPUTSELECT
reset_n => new_v_count[6].OUTPUTSELECT
reset_n => new_v_count[5].OUTPUTSELECT
reset_n => new_v_count[4].OUTPUTSELECT
reset_n => new_v_count[3].OUTPUTSELECT
reset_n => new_v_count[2].OUTPUTSELECT
reset_n => new_v_count[1].OUTPUTSELECT
reset_n => new_v_count[0].OUTPUTSELECT
reset_n => vgahsync.OUTPUTSELECT
reset_n => vgavsync.OUTPUTSELECT
reset_n => vgacolor.OUTPUTSELECT
reset_n => vgacolor.OUTPUTSELECT
reset_n => vgacolor.OUTPUTSELECT
reset_n => vgacolor.OUTPUTSELECT
reset_n => vga_claim.OUTPUTSELECT
reset_n => vga_read.OUTPUTSELECT
vgahsync <= vgahsync.DB_MAX_OUTPUT_PORT_TYPE
vgavsync <= vgavsync.DB_MAX_OUTPUT_PORT_TYPE
vgacolor[0] <= vgacolor.DB_MAX_OUTPUT_PORT_TYPE
vgacolor[1] <= vgacolor.DB_MAX_OUTPUT_PORT_TYPE
vgacolor[2] <= vgacolor.DB_MAX_OUTPUT_PORT_TYPE
vgacolor[3] <= vgacolor.DB_MAX_OUTPUT_PORT_TYPE
vga_claim <= vga_claim.DB_MAX_OUTPUT_PORT_TYPE
ramaddr[0] <= ramaddr[0].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[1] <= ramaddr[1].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[2] <= ramaddr[2].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[3] <= ramaddr[3].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[4] <= ramaddr[4].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[5] <= ramaddr[5].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[6] <= ramaddr[6].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[7] <= ramaddr[7].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[8] <= ramaddr[8].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[9] <= ramaddr[9].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[10] <= ramaddr[10].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[11] <= ramaddr[11].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[12] <= ramaddr[12].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[13] <= ramaddr[13].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[14] <= ramaddr[14].DB_MAX_OUTPUT_PORT_TYPE
ramaddr[15] <= ramaddr[15].DB_MAX_OUTPUT_PORT_TYPE
ramdata[0] => vgacolor.DATAB
ramdata[1] => vgacolor.DATAB
ramdata[2] => vgacolor.DATAB
ramdata[3] => vgacolor.DATAB
vga_read <= vga_read.DB_MAX_OUTPUT_PORT_TYPE
vga_can_access => vga_combi.IN1
vga_can_access => vga_combi.IN1
asb => ramaddr[15].DATAIN


|top_de1|gpu:inst2|spi:spi1
reset => mosi_latched.ACLR
reset => spi_data_available~reg0.ACLR
reset => ss_latched.ACLR
reset => ss_old.ACLR
reset => sclk_latched.ACLR
reset => sclk_old.ACLR
reset => index[0].PRESET
reset => index[1].PRESET
reset => index[2].PRESET
reset => spi_rx_data[0].ACLR
reset => spi_rx_data[1].ACLR
reset => spi_rx_data[2].ACLR
reset => spi_rx_data[3].ACLR
reset => spi_rx_data[4].ACLR
reset => spi_rx_data[5].ACLR
reset => spi_rx_data[6].ACLR
reset => spi_rx_data[7].ACLR
clk => mosi_latched.CLK
clk => spi_data_available~reg0.CLK
clk => ss_latched.CLK
clk => ss_old.CLK
clk => sclk_latched.CLK
clk => sclk_old.CLK
clk => index[0].CLK
clk => index[1].CLK
clk => index[2].CLK
clk => spi_rx_data[0].CLK
clk => spi_rx_data[1].CLK
clk => spi_rx_data[2].CLK
clk => spi_rx_data[3].CLK
clk => spi_rx_data[4].CLK
clk => spi_rx_data[5].CLK
clk => spi_rx_data[6].CLK
clk => spi_rx_data[7].CLK
spi_clk => sclk_latched.DATAIN
spi_ss => ss_latched.DATAIN
spi_mosi => mosi_latched.DATAIN
spi_data_available <= spi_data_available~reg0.DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[0] <= spi_rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[1] <= spi_rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[2] <= spi_rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[3] <= spi_rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[4] <= spi_rx_data[4].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[5] <= spi_rx_data[5].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[6] <= spi_rx_data[6].DB_MAX_OUTPUT_PORT_TYPE
spi_data_rx[7] <= spi_rx_data[7].DB_MAX_OUTPUT_PORT_TYPE


|top_de1|gen6mhz:inst1
clk50mhz => count[0].CLK
clk50mhz => count[1].CLK
clk50mhz => count[2].CLK
clk6mhz <= count[2].DB_MAX_OUTPUT_PORT_TYPE


|top_de1|pre_vga_dac_4:inst
VGACOLOR[0] => vga_b[1].DATAIN
VGACOLOR[0] => vga_r[0].DATAIN
VGACOLOR[0] => vga_r[1].DATAIN
VGACOLOR[0] => vga_g[0].DATAIN
VGACOLOR[0] => vga_g[1].DATAIN
VGACOLOR[0] => vga_b[0].DATAIN
VGACOLOR[1] => vga_b[3].DATAIN
VGACOLOR[1] => vga_b[2].DATAIN
VGACOLOR[2] => vga_g[3].DATAIN
VGACOLOR[2] => vga_g[2].DATAIN
VGACOLOR[3] => vga_r[3].DATAIN
VGACOLOR[3] => vga_r[2].DATAIN
vga_r[0] <= VGACOLOR[0].DB_MAX_OUTPUT_PORT_TYPE
vga_r[1] <= VGACOLOR[0].DB_MAX_OUTPUT_PORT_TYPE
vga_r[2] <= VGACOLOR[3].DB_MAX_OUTPUT_PORT_TYPE
vga_r[3] <= VGACOLOR[3].DB_MAX_OUTPUT_PORT_TYPE
vga_g[0] <= VGACOLOR[0].DB_MAX_OUTPUT_PORT_TYPE
vga_g[1] <= VGACOLOR[0].DB_MAX_OUTPUT_PORT_TYPE
vga_g[2] <= VGACOLOR[2].DB_MAX_OUTPUT_PORT_TYPE
vga_g[3] <= VGACOLOR[2].DB_MAX_OUTPUT_PORT_TYPE
vga_b[0] <= VGACOLOR[0].DB_MAX_OUTPUT_PORT_TYPE
vga_b[1] <= VGACOLOR[0].DB_MAX_OUTPUT_PORT_TYPE
vga_b[2] <= VGACOLOR[1].DB_MAX_OUTPUT_PORT_TYPE
vga_b[3] <= VGACOLOR[1].DB_MAX_OUTPUT_PORT_TYPE


